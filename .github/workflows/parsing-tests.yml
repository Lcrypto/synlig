name: Parsing Tests

on:
  workflow_call:
    inputs:
      uhdm_tests_branch:
        description: 'UHDM-integration-tests branch or URL'
        required: false
        type: 'string'
        default: ''
      plugins_branch:
        description: 'yosys-f4pga-plugins branch or URL'
        required: false
        type: 'string'
        default: ''
    secrets:
      SSH_DEPLOY_KEY:
        description: 'SSH key used to push logs'
        required: true


env:
  GHA_CUSTOM_LINE_PREFIX: "â–Œ"
  TESTS_TO_SKIP: ibex swerv synthesis opentitan serv serv-minimal hello-uvm assignment-pattern Forever BitsCallOnType OneClass
    Continue AnonymousUnion ParameterUnpackedArray VoidFunction2Returns PatternStruct ImportedFunctionCallInModuleAndSubmodule
    VoidFunctionWithoutReturn cmake PutC OneThis CastInFunctionInGenBlock PatternType FunctionOutputArgument GetC ForkJoinTypes
    EnumFirstInInitial ImportFunction DpiChandle Disable EnumFirst TypedefOnFileLevel UnsizedConstantsParameterParsing Fork
    PatternInFunction TypedefVariableDimensions ParameterUnpackedLogicArray SelectFromUnpackedInFunction PatternReplication
    VoidFunction MultiplePrints BitSelectPartSelectInFunction ImportPackageWithFunction ParameterPackedArray StringAssignment
    SystemFunctions ParameterDoubleUnderscoreInSvFrontend OutputSizeWithParameterOfInstanceInitializedByStructMember
    ParameterOfSizeOfParametrizedPort ParameterOfSizeOfParametrizedPortInSubmodule ParameterOfSizeOfPort StringAssignConcatenation
    StringLocalParamInitByConcatenation StringWithBackslash FunctionWithOverriddenParameter RealValue BitsCallOnParametetrizedTypeFromPackage
    AssignToUnpackedUnionFieldAndReadOtherField IndexedPartSelectInFor NestedPatternPassedAsPort StreamOp
    NestedStructArrayParameterInitializedByPatternPassedAsPort PartSelectInFor SelfSelectsInBitSelectAfterBitSelect
    StructArrayParameterInitializedByPatternPassedAsPort SelectGivenBySelectOnParameterInFunction StreamOperatorBitReverseFunction black-parrot
    bsg

jobs:
  tests-read-uhdm:
    name: Surelog
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:jammy
    strategy:
      fail-fast: false
    env:
      CC: gcc-9
      CXX: g++-9
      GIT_HTTP_LOW_SPEED_LIMIT: 1
      GIT_HTTP_LOW_SPEED_TIME: 600
      DEBIAN_FRONTEND: noninteractive
      GHA_MACHINE_TYPE: "n2-standard-2"
      PARSER: surelog

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up common Ubuntu configuration
        run: ./.github/scripts/set-up-common-ubuntu-configuration.sh

      - name: Install dependencies
        run: |
          apt-get update -qq
          apt install -y software-properties-common
          add-apt-repository ppa:ubuntu-toolchain-r/test
          apt-get update -qq
          apt install -y gcc-9 g++-9 build-essential cmake tclsh ant default-jre swig google-perftools libgoogle-perftools-dev python3 python3-dev uuid uuid-dev tcl-dev flex libfl-dev git
          update-alternatives --install /usr/bin/python python /usr/bin/python3 1

      - name: Checkout submodules
        run: |
          git submodule update --depth 1 --init --recursive \
              Surelog \
              UHDM-integration-tests \
              ;

      - name: Override submodule revisions (if requested)
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.uhdm_tests_branch != ''}}
        env:
          UHDM_TESTS_BRANCH_SPEC: ${{github.event.inputs.uhdm_tests_branch}}
        run: |
          source ./.github/scripts/submodule-revision-override.inc.bash

          override-submodule-if-requested \
              'UHDM-integration-tests' \
              "$uhdm_tests_default_gh_user" "$uhdm_tests_default_gh_repo" \
              "$UHDM_TESTS_BRANCH_SPEC"

      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: binaries

      # See https://github.com/actions/upload-artifact/issues/38
      - name: Extract
        run: tar -xf binaries.tar

      - name: Build & Test (yosys)
        run: |
          ./.github/scripts/run_group_test.sh

        env:
          TARGET: uhdm/yosys/test-ast

      - name: Rename test results
        if: ${{ always() }}
        run: |
          mv test-results/test-results.passed test-results/test-results-uhdm.passed || true
          mv test-results/test-results.failed test-results/test-results-uhdm.failed || true

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: test-results
          path: test-results

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: tests-vcddiff-artifacts
          path: UHDM-integration-tests/artifacts

      - name: Upload load graphs
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: plots
          path: |
            **/plot_*.svg

  tests-read-systemverilog:
    name: SystemVerilog Plugin
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:jammy
    strategy:
      fail-fast: false
    env:
      CC: gcc-9
      CXX: g++-9
      GIT_HTTP_LOW_SPEED_LIMIT: 1
      GIT_HTTP_LOW_SPEED_TIME: 600
      DEBIAN_FRONTEND: noninteractive
      GHA_MACHINE_TYPE: "n2-standard-2"
      PARSER: yosys-plugin

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up common Ubuntu configuration
        run: ./.github/scripts/set-up-common-ubuntu-configuration.sh

      - name: Install dependencies
        run: |
          apt-get update -qq
          apt install -y software-properties-common
          add-apt-repository ppa:ubuntu-toolchain-r/test
          apt-get update -qq
          apt install -y gcc-9 g++-9 build-essential cmake tclsh ant default-jre swig google-perftools libgoogle-perftools-dev python3 python3-dev uuid uuid-dev tcl-dev flex libfl-dev git
          update-alternatives --install /usr/bin/python python /usr/bin/python3 1

      - name: Checkout submodules
        run: |
          git submodule update --depth 1 --init --recursive \
              Surelog \
              UHDM-integration-tests \
              ;

      - name: Override submodule revisions (if requested)
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.uhdm_tests_branch != ''}}
        env:
          UHDM_TESTS_BRANCH_SPEC: ${{github.event.inputs.uhdm_tests_branch}}
        run: |
          source ./.github/scripts/submodule-revision-override.inc.bash

          override-submodule-if-requested \
              'UHDM-integration-tests' \
              "$uhdm_tests_default_gh_user" "$uhdm_tests_default_gh_repo" \
              "$UHDM_TESTS_BRANCH_SPEC"

      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: binaries

      # See https://github.com/actions/upload-artifact/issues/38
      - name: Extract
        run: tar -xf binaries.tar

      - name: Build & Test (yosys)
        run: |
          ./.github/scripts/run_group_test.sh

        env:
          TARGET: uhdm/yosys/test-ast

      - name: Rename test results
        if: ${{ always() }}
        run: |
          mv test-results/test-results.passed test-results/test-results-systemverilog.passed || true
          mv test-results/test-results.failed test-results/test-results-systemverilog.failed || true

      - uses: actions/upload-artifact@v3
        with:
          name: parsing-logs
          path: logs

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: test-results
          path: test-results

      - name: Upload load graphs
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: plots
          path: |
            **/plot_*.svg

  push-logs:
    name: Generate AST diff
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:jammy
    needs:
      - tests-read-systemverilog
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Download test results
        uses: /actions/download-artifact@v3
        with:
          name: parsing-logs
          path: logs

      - name: Set up common Ubuntu configuration
        run: ./.github/scripts/set-up-common-ubuntu-configuration.sh

      - name: Install dependencies
        run: |
          apt-get update -q
          apt-get install -y git

      - name: Generate push branch name
        run: |
          branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          PUSH_BRANCH=$branch
          if [[ ! -z "$PLUGINS_BRANCH_SPEC" ]]; then
            PUSH_BRANCH="${PUSH_BRANCH}+plugins+${PLUGINS_BRANCH_SPEC}"
          fi
          if [[ ! -z "$UHDM_TESTS_BRANCH_SPEC" ]]; then
            PUSH_BRANCH="${PUSH_BRANCH}+tests+${UHDM_TESTS_BRANCH_SPEC}"
          fi
          echo "PUSH_BRANCH=$PUSH_BRANCH" >> "$GITHUB_ENV"
          CURRENT_LOGS_SHA=$(git ls-remote https://github.com/${{ github.repository_owner }}/yosys-systemverilog-logs master | cut -d $'\t' -f1)
          COMMENT_MSG="https://github.com/${{ github.repository }}-logs/compare/$CURRENT_LOGS_SHA..$PUSH_BRANCH"
          echo "COMMENT_MSG=$COMMENT_MSG" >> "$GITHUB_ENV"
          PUSH_LOGS=false
          # currently pushing logs when submodules are overriten using url is not supported
          if [[ ! "$PLUGINS_BRANCH_SPEC" =~ "https://" && ! "$UHDM_TESTS_BRANCH_SPEC" =~ "https://" ]]; then
            PUSH_LOGS=true
          fi
          echo "PUSH_LOGS=$PUSH_LOGS" >> "$GITHUB_ENV"
          echo "COMMENT_HEADER=Logs difference between main branch:" >> "$GITHUB_ENV"
        env:
          PLUGINS_BRANCH_SPEC: ${{github.event.inputs.plugins_branch}}
          UHDM_TESTS_BRANCH_SPEC: ${{github.event.inputs.uhdm_tests_branch}}

      - name: Push logs
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
        run: |
          .github/scripts/push_to_logs_repository.sh "$GITHUB_REPOSITORY_OWNER" "$PUSH_BRANCH" "$GITHUB_RUN_ID" logs

      - name: Post comment
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v6
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number
            });
            const newFirstLine = process.env.COMMENT_HEADER;
            const newComment = newFirstLine + '\n' + process.env.COMMENT_MSG;
            let commentUpdated = false;
            for (const comment of comments) {
              const oldFirstLine = comment.body.split('\n')[0];
              if (oldFirstLine == newFirstLine) {
                github.rest.issues.updateComment({
                  comment_id: comment.id,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: newComment
                });
                commentUpdated = true;
                break;
              }
            }
            if (!commentUpdated) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: newComment
              });
            }

      - name: Create summary
        if: ${{ env.PUSH_LOGS == 'true' }}
        run: |
          echo "${{ env.COMMENT_HEADER }}" >> $GITHUB_STEP_SUMMARY
          echo "${{ env.COMMENT_MSG }}" >> $GITHUB_STEP_SUMMARY

  generate-tests-summary:
    name: Summary Generation
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:jammy
    if: ${{ !cancelled() }}
    needs:
      - tests-read-uhdm
      - tests-read-systemverilog

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up common Ubuntu configuration
        run: ./.github/scripts/set-up-common-ubuntu-configuration.sh

      - name: Download test results
        uses: /actions/download-artifact@v3
        with:
          name: test-results

      - name: Generate summary
        run: |
          ./.github/scripts/generate_summary.sh
