From f794d982914c4fb6c459b443e9fb7db7213ee805 Mon Sep 17 00:00:00 2001
From: Kamil Rakoczy <krakoczy@antmicro.com>
Date: Mon, 20 Mar 2023 11:08:11 +0100
Subject: [PATCH 18/18] Fix some out of range access

Signed-off-by: Kamil Rakoczy <krakoczy@antmicro.com>
---
 hw/ip/lc_ctrl/rtl/lc_ctrl.sv              | 2 +-
 hw/ip/lc_ctrl/rtl/lc_ctrl_state_decode.sv | 2 +-
 hw/ip/rom_ctrl/rtl/rom_ctrl.sv            | 6 +++---
 3 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/hw/ip/lc_ctrl/rtl/lc_ctrl.sv b/hw/ip/lc_ctrl/rtl/lc_ctrl.sv
index 631258d8b..369f0d179 100644
--- a/hw/ip/lc_ctrl/rtl/lc_ctrl.sv
+++ b/hw/ip/lc_ctrl/rtl/lc_ctrl.sv
@@ -285,7 +285,7 @@ module lc_ctrl
   mubi8_t        tap_claim_transition_if_d, tap_claim_transition_if_q;
   logic          transition_cmd;
   lc_token_t     transition_token_d, transition_token_q;
-  ext_dec_lc_state_t transition_target_d, transition_target_q;
+  logic [4:0][5:0] transition_target_d, transition_target_q;
   // No need to register these.
   ext_dec_lc_state_t dec_lc_state;
   dec_lc_cnt_t       dec_lc_cnt;
diff --git a/hw/ip/lc_ctrl/rtl/lc_ctrl_state_decode.sv b/hw/ip/lc_ctrl/rtl/lc_ctrl_state_decode.sv
index 9688b4d9d..d94170ec0 100644
--- a/hw/ip/lc_ctrl/rtl/lc_ctrl_state_decode.sv
+++ b/hw/ip/lc_ctrl/rtl/lc_ctrl_state_decode.sv
@@ -16,7 +16,7 @@ module lc_ctrl_state_decode
   // Main FSM state.
   input  fsm_state_e        fsm_state_i,
   // Decoded state vector.
-  output ext_dec_lc_state_t dec_lc_state_o,
+  output logic [4:0][5:0] dec_lc_state_o,
   output dec_lc_id_state_e  dec_lc_id_state_o,
   output dec_lc_cnt_t       dec_lc_cnt_o,
   output logic [5:0]        state_invalid_error_o
diff --git a/hw/ip/rom_ctrl/rtl/rom_ctrl.sv b/hw/ip/rom_ctrl/rtl/rom_ctrl.sv
index 747703bc5..3fa77a265 100644
--- a/hw/ip/rom_ctrl/rtl/rom_ctrl.sv
+++ b/hw/ip/rom_ctrl/rtl/rom_ctrl.sv
@@ -422,14 +422,14 @@ module rom_ctrl
     localparam int unsigned TopBitInt = 32 * i + 31;
     localparam bit [7:0] TopBit = TopBitInt[7:0];
 
-    assign hw2reg.digest[i].d = digest_d[TopBit -: 32];
+    assign hw2reg.digest[i].d = digest_d[TopBitInt -: 32];
     assign hw2reg.digest[i].de = digest_de;
 
     assign hw2reg.exp_digest[i].d = exp_digest_word_d;
     assign hw2reg.exp_digest[i].de = exp_digest_de && (i[2:0] == exp_digest_idx);
 
-    assign digest_q[TopBit -: 32] = reg2hw.digest[i].q;
-    assign exp_digest_q[TopBit -: 32] = reg2hw.exp_digest[i].q;
+    assign digest_q[TopBitInt -: 32] = reg2hw.digest[i].q;
+    assign exp_digest_q[TopBitInt -: 32] = reg2hw.exp_digest[i].q;
   end
 
   logic bus_integrity_error;
-- 
2.39.0

